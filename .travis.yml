language: python
services:
  - docker
env:
  global:
    - VERSION=$(egrep -o -m1 ^##.*\[[0-9]\] CHANGELOG.md | awk '{print $2}' | tr -d "[]" | tr -d "[:space:]")
    - TRAVIS_TAG=${VERSION}
    - DOCKER_COMPOSE_VERSION=1.24.0
    # travis encrypt HEROKU_API_KEY=$(heroku auth:token) --pro
    - HEROKU_WEB_NAME=deploybeats
    - HEROKU_API_NAME=deploybeats-api
    - BACKEND_HOST=${HEROKU_API_NAME}.herokuapp.com
    - BACKEND_PORT=80
before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - wget -qO- https://toolbelt.heroku.com/install.sh | sh
jobs:
  include:
    - stage: Build
      script:
        - docker-compose build
        - docker images
    - stage: Tests
      script:
        - docker-compose up -d
        - docker-compose ps
        - docker-compose run tests
    - stage: Deploy
      env:
        # travis encrypt $(heroku auth:token) --pro
        DATABASE_URI:
          secure: "rSF3I1iAE4Duzlc1xIqHZh9UGHqEQudKr5vQ4hplrDsxExfjU46grPu125kZ2sijqIYGsIczK6IxzztD1xRH6FILulv3pxqhYx8PPftg2y0xBNzRR/qCswDTBxxBDA+uwHMCXqqqIPFT7DQnTE6HIGiq+NIey1sQ8NjRHnB5erEnlILKh+aBENDHb3Dxv4HuM2URAKtUUbfqkHa9j9h7u5mFyuIftE5kvCCtC/GA7vRwE0ZkfDqszVCx5BNIYQgukk9AmbqZhDir9sytHKVojWWhScy1EOwyDvl8hx8JD3Ws5BVHJ8zQMi/R0wdyclSId9GispmNclGMoibe3ROHorTg7DiCfLvt6D7bjud/nXdQTp/CeugRlI7djbrKFXxfl825WfiVsgzbtziMcYuj/lxNQvwGdFCYuCW066bDMO2XPq4tI6ww+VUn88yLuPQY46C7Xm321Sl/VEdNOqGikdD8GFo0EP40CqbDjODOdndGU9EavKg/v5ELkCJ76h3QQjoDddu5+H9hkaVl5nlLbDxDxe30yVpsP1QjH5Bcp0VPhvo29CAhnQPGr7BvDQ8wnZh6VJE7Nmsv3f52uCdqXF0DYXuozjrgYHodyTv+20tlvgu0yNEXtJR6B7TSbhOxq5pFoGC9SSlvuc1n7j1r3ID/UJb2JYutnm+7yAhJGAI="
      script:
        - docker-compose build && docker images
        - echo "$DOCKER_PASSWORD" | docker login --username=_ --password-stdin registry.heroku.com
        - heroku apps | grep ^${HEROKU_WEB_NAME}$ || heroku apps:create ${HEROKU_WEB_NAME}
        - heroku apps | grep ^${HEROKU_API_NAME}$ || heroku apps:create ${HEROKU_API_NAME}
        - docker tag frontend registry.heroku.com/${HEROKU_WEB_NAME}/web && docker push registry.heroku.com/${HEROKU_WEB_NAME}/web
        - docker tag backend registry.heroku.com/${HEROKU_API_NAME}/web && docker push registry.heroku.com/${HEROKU_API_NAME}/web
        - git tag -f ${VERSION}
      deploy:
        - provider: script
          script: heroku config:set BACKEND_HOST=${BACKEND_HOST} BACKEND_PORT=${BACKEND_PORT} -a ${HEROKU_WEB_NAME} && heroku container:release web -a ${HEROKU_WEB_NAME} && heroku ps:scale web=1 -a ${HEROKU_WEB_NAME}
          on:
            all_branches: true
            tags: true
        - provider: script
          script: heroku config:set DB_URI="${DATABASE_URI}" -a ${HEROKU_API_NAME} && heroku container:release web -a ${HEROKU_API_NAME} && heroku ps:scale web=1 -a ${HEROKU_API_NAME}
          on:
            all_branches: true
            tags: true
